---

- name: Require that the host-provisioning Conda environment is activated
  assert:
    that: ansible_facts['env']['CONDA_DEFAULT_ENV'] == 'host-provisioning'
    fail_msg: '[ERROR]: This playbook expects for the host-provisioning Conda environment to be activated. Activate that environment using the following command: `conda activate host-provisioning`'
    quiet: yes

- name: Install the Docker Engine packages .. please be patient
  package:
    name:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin
    state: present
  become: yes

- name: Ensure that the Docker Engine daemon is enabled and started
  systemd_service:
    name: docker
    enabled: yes
    state: started
  become: yes

- name: Create the docker group to manage access to the Docker Engine
  group:
    name: docker
    state: present
  become: yes

- name: Install the Qemu packages
  package:
    name:
    - binfmt-support
    - qemu-user-static
  become: yes

- name: Assert that the docker Python module was previously installed
  # 
  # Note: The docker Python SDK module is a dependency of the Ansible modules
  # within the community.docker collection. It will have been installed when
  # the jugglebot conda environment was created based on the
  # jugglebot_conda_env.yml specification.
  #
  pip:
    name: docker
    state: present
  check_mode: yes
  register: pip_check_result
  failed_when: pip_check_result is changed

- name: Run the Qemu installer image .. please be patient
  # 
  # Note: As of this writing, the following page recommends using the
  # tonistiigi/binfmt executable image to install Qemu and to register Qemu
  # emulators. However, we found that to be unreliable. Instead, we install
  # the OS packages and then use the multiarch/qemu-user-static image to
  # register the emulators.
  #
  # ref: https://docs.docker.com/build/building/multi-platform/
  # ref: https://github.com/multiarch/qemu-user-static
  #
  community.docker.docker_container:
    name: qemu_installer
    image: multiarch/qemu-user-static
    command: '--reset -p yes'
    privileged: yes
    auto_remove: yes
    pull: missing
  become: yes
  changed_when: False

- name: Remove the Qemu installer Docker container
  community.docker.docker_container:
    name: qemu_installer
    state: absent
  become: yes
  changed_when: False

- name: Verify that the Docker Engine and Qemu are working
  community.docker.docker_container:
    name: qemu_verifier
    image: arm64v8/alpine
    command: 'uname -a'
    platform: linux/arm64
    detach: no
  become: yes
  register: verify_docker_and_qemu_result
  failed_when: not verify_docker_and_qemu_result.container.Output is search('aarch64 Linux')
  changed_when: False

- name: Remove the arm64 Docker container that was used to verify
  community.docker.docker_container:
    name: qemu_verifier
    state: absent
  become: yes
  changed_when: False
