#!/usr/bin/env bash
set -o nounset -o pipefail -o errexit
IFS=$'\t\n' # Stricter IFS settings
rc=0

# TASK [Define functions]

task() {
  local task_desc="$1"
  echo -e "\nTASK [${task_desc}] ********"
}

task 'Initialize variables'

CONDA_FILEPATH="${HOME}/miniforge3/bin/conda"
HOST_SETUP_BACKUPS_DIR="${HOME}/.jugglebot/host_setup/backups"
REPO_DIR="${REPO_DIR:-${HOME}/Jugglebot}"
BOOTSTRAP_CONDA_ENV_FILEPATH="${BOOTSTRAP_CONDA_ENV_FILEPATH:-${REPO_DIR}/environments/ubuntu-common/bootstrap_conda_env.yml}"
JUGGLEBOT_CONDA_ENV_FILEPATH="${JUGGLEBOT_CONDA_ENV_FILEPATH:-${REPO_DIR}/ros_ws/conda_env.yml}"
REFRESH_PLAYBOOK_FILEPATH="${REFRESH_PLAYBOOK_FILEPATH:-${REPO_DIR}/environments/ubuntu-common/refresh_conda_env_playbook.yml}"

task 'Ensure that the ~/.jugglebot/host_setup/backups directory exists'

install -d "${HOST_SETUP_BACKUPS_DIR}"

task 'Test whether Ansible has been installed'

eval "$("${CONDA_FILEPATH}" 'shell.bash' 'hook' 2> /dev/null)"

if ! which ansible-playbook; then

  task 'Create the boostrap Conda environment'
  
  conda env create -f "${BOOTSTRAP_CONDA_ENV_FILEPATH}"

  task 'Activate the bootstrap Conda environment'

  conda activate bootstrap

fi 

task 'Run the refresh jugglebot Conda environment playbook'

ANSIBLE_LOCALHOST_WARNING=False ANSIBLE_INVENTORY_UNPARSED_WARNING=False ansible-playbook \
  "${REFRESH_PLAYBOOK_FILEPATH}" || rc="$?"

task 'Ensure that the jugglebot Conda environment is active'

# Note: The ROS workaround prevents ~/.jugglebot/conda_env.sh from sourcing the
# ROS shell setup script upon activating the environment.

export ROS_WORKAROUND_ENABLED=yes

conda activate jugglebot

unset ROS_WORKAROUND_ENABLED

